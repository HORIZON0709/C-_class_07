//===================================================
//
//授業その7[warrior.cpp]
//Author:KishimotoEiji
//
//===================================================

//********************************
//インクルード
//********************************
#include "warrior.h"
#include "main.h"

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>

//********************************
//プロトタイプ宣言
//********************************
namespace
{

}// namespaceはここまで

//===================================================
//コンストラクタ
//===================================================
CWarrior::CWarrior()
{
	//メンバ変数をクリア
	m_nWpnDurability = 0;
	m_nAtkHalf = 0;
}

//===================================================
//デストラクタ
//===================================================
CWarrior::~CWarrior()
{
	/* 処理無し */
}

//===================================================
//初期化
//===================================================
void CWarrior::Init()
{
	//ステータスの設定
	SetHp(rand() % 50 + 50);
	SetAttack(rand() % 5 + 5);

	//メンバ変数を初期化
	m_nWpnDurability = rand() % 4 + 1;
	m_nAtkHalf = (GetAttack() / 2);
}

//===================================================
//出力
//===================================================
void CWarrior::Output()
{
	printf("\n 戦士 … HP : [%d] /",GetHp());
	printf(" 攻撃力 : [%d] /", GetAttack());
	printf(" 武器耐久力 : [%d]", m_nWpnDurability);
}

//===================================================
//終了
//===================================================
void CWarrior::Uninit()
{
	
}

//===================================================
//攻撃する
//===================================================
void CWarrior::Attack(CCharacter* pTarget)
{
	//メッセージ
	printf("\n 戦士の攻撃！魔法使いに[ %d ]のダメージ！", GetAttack());

	pTarget->BeAttacked(GetAttack());	//相手にダメージを与える

	if (m_nWpnDurability > 0)
	{//0未満にはならない
		m_nWpnDurability--;	//武器耐久力が減少
	}

	//メッセージ
	printf(" / 残りの武器耐久力 : [ %d ]", m_nWpnDurability);

	if (m_nWpnDurability <= 0)
	{//武器耐久力が0以下になったとき
		SetAttack(m_nAtkHalf);	//半減した攻撃力を設定
	}
}

//===================================================
//攻撃を受ける
//===================================================
void CWarrior::BeAttacked(const int nDamage)
{
	int nHp = GetHp();	//現在のHPを取得

	nHp -= nDamage;	//受けたダメージ分減らす

	if (nHp < 0)
	{//マイナスになったら
		nHp = 0;	//0に設定
	}

	SetHp(nHp);	//残りのHPを設定する

	//表示
	printf("\n 戦士 … 残りHP : [%d]", GetHp());
}